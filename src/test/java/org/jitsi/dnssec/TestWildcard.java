/*
 * dnssecjava - a DNSSEC validating stub resolver for Java
 * Copyright (C) 2013 Ingo Bauersachs. All rights reserved.
 *
 * This file is part of dnssecjava.
 *
 * Dnssecjava is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Dnssecjava is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with dnssecjava.  If not, see <http://www.gnu.org/licenses/>.
 */

package org.jitsi.dnssec;

import static org.junit.Assert.*;

import java.io.IOException;

import org.junit.Test;
import org.xbill.DNS.Flags;
import org.xbill.DNS.Message;
import org.xbill.DNS.Rcode;

public class TestWildcard extends TestBase {
    @Test
    public void testNameNotExpandedFromWildcardWhenNonWildcardExists() throws IOException {
//        ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 60176
//        ;; flags: qr aa rd ra ; qd: 1 an: 2 au: 4 ad: 3 
//        ;; QUESTIONS:
//        ;;  a.d.ingotronic.ch., type = A, class = IN
//
//        ;; ANSWERS:
//        a.d.ingotronic.ch.  300 IN  A   127.0.0.2
//        a.d.ingotronic.ch.  300 IN  RRSIG   A 5 3 300 20130531135453 20130501134258 17430 ingotronic.ch. IZWwjIZi58dHBY9/ui7O1NsRJzSBG9LuwkQ+AEnzLjTtZzRgVJAhDJj2XijEXyMsV0hoNNXWWoDdOLRgbN4w5/tLDaBZD2M1dyvNlamRdb49x0G1TJq1uiXR7a1t0PN6c9keUDRteA84VwqAXbiCWnutWVOiNQ16tH0LkgjK5uc=
//
//        ;; AUTHORITY RECORDS:
//        ingotronic.ch.      300 IN  NS  ns1.ingotronic.ch.
//        ingotronic.ch.      300 IN  RRSIG   NS 5 2 300 20130531140553 20130501134258 17430 ingotronic.ch. d5muom+0sQUrxRSo8lI1n2rT4XG7PP3WqZxpwXZWejRHwJsWyjYIrQq6K59GKfS116oQoRs3sdav4/Ujb3Cqkq8T5/Wj38mvqSOanakly6P6K7bMOCS1zPZ95QgdyxDsQH3nDHRWUmDSl/NSCkSVWiBTMBtFwgmIUiMB+HCV/fk=
//        a.d.ingotronic.ch.  300 IN  NSEC    invalid.ingotronic.ch. A RRSIG NSEC
//        a.d.ingotronic.ch.  300 IN  RRSIG   NSEC 5 4 300 20130531135453 20130501134258 17430 ingotronic.ch. LsXsCIWEqG2pAtx+I/rfrlP2ToAhl9D0VcE01kd/Dcu+GSrashuMdziJi0bKgzFVUHLEM4TMSwopyy1u9eSb3xPfLAwsrXsJB3Kx3Kiz2lVn95RliUlgzgLnxN5Vr95kBxGV0yqQkB+bWsVUdJpZCoYMWd1KUJJ4m51ZtmKjScY=
//
//        ;; ADDITIONAL RECORDS:
//        ns1.ingotronic.ch.  300 IN  A   62.192.5.131
//        ns1.ingotronic.ch.  300 IN  RRSIG   A 5 3 300 20130531140814 20130501134258 17430 ingotronic.ch. A86YmGMp/CQZfvbhXRMIrVbQwIGz1iSWEAMbV4XgeHIvAM00TJmbpvQnekhmffEBYeokTf4lvVSIBfQ+t6GcHT583CMZ0ecfmEJhgei8H9ON85OFtl/59YCUO+Ew6R1T8hrDG3R5P/vP0OuVfNna1WRJZ1ighvoqpghZu7kXgRQ=
//        .           32768   CLASS4096   OPT  ; payload 4096, xrcode 0, version 0, flags 32768
//
//        ;; Message size: 833 bytes
        //this a faked response: the original query/response was for b.d.ingotronic.ch. and is now changed to a.d.ingotronic.ch.
        add("a.d.ingotronic.ch./A",

//                                         ^^

        // a.d.ingotronic.ch./A exists, but the response is faked from *.d.ingotronic.ch. which must be detected by the NSEC proof
        Message response = resolver.send(createMessage("a.d.ingotronic.ch./A"));
        assertFalse(response.getHeader().getFlag(Flags.AD));
        assertEquals(Rcode.SERVFAIL, response.getHeader().getRcode());
    }

    @Test
    public void testNameNotExpandedFromWildcardWhenNonWildcardExistsNsec3() throws IOException {
//        ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 36879
//        ;; flags: qr aa rd ra ; qd: 1 an: 2 au: 4 ad: 3 
//        ;; QUESTIONS:
//        ;;  a.d.nsec3.ingotronic.ch., type = A, class = IN
//
//        ;; ANSWERS:
//        a.d.nsec3.ingotronic.ch.    300 IN  A   127.0.0.1
//        a.d.nsec3.ingotronic.ch.    300 IN  RRSIG   A 7 4 300 20130531144246 20130501134258 62417 nsec3.ingotronic.ch. c1tuhkJ26CMCEEpFLJyDiILxad6Yd0NkVKRlYlbAlE7ud094ram1b2Lb7RIXEaffJlHiY3PA24AGzHEvaZuQODnW5z9SlON+gTeaLE8AhuZWhcp3BjTj4Z3RUykQtGSWWtJNkPktxnu0RoXTpwxYJby2iZXa/lGcCkd+cgfb9GQ=
//
//        ;; AUTHORITY RECORDS:
//        nsec3.ingotronic.ch.    300 IN  NS  ns1.ingotronic.ch.
//        nsec3.ingotronic.ch.    300 IN  RRSIG   NS 7 3 300 20130531134545 20130501134258 62417 nsec3.ingotronic.ch. EPF3Z6tqJIfmIKpkcN806UtqMeYHSKLMU+BN/UTk+hw1y/kHy77Jfj0XdyqM3JcEGRTqxaMybdjQZ0hNmOam7oECCZY8VHw6qutD5cxGouvpWLib3Mw0aF+TZ2QraOpiGogD3VAQvqyk+faIBAhMw1FGtYcHE+6rib3iWWrs9GU=
//        a.d.nsec3.ingotronic.ch.    300 IN  NSEC    www.nsec3.ingotronic.ch. A RRSIG NSEC
//        a.d.nsec3.ingotronic.ch.    300 IN  RRSIG   NSEC 7 5 300 20130531144246 20130501134258 62417 nsec3.ingotronic.ch. bBqy5dPwDim8Q+RrMjmjHwAe25WGES/YmuoJIwAukluxW7uZ7thP3dEOxdBj4b7D7pzSHm39l89UQGOiX9iBOLBiOu5amVoXUlWwEYnXe8SCMW39ohTBipMvlPcGFjRabALZta7Vijwl1ZG0DIW2nUdneqAw6tQp4ue73Fy9JXY=
//
//        ;; ADDITIONAL RECORDS:
//        ns1.ingotronic.ch.  300 IN  A   62.192.5.131
//        ns1.ingotronic.ch.  300 IN  RRSIG   A 5 3 300 20130531140814 20130501134258 17430 ingotronic.ch. A86YmGMp/CQZfvbhXRMIrVbQwIGz1iSWEAMbV4XgeHIvAM00TJmbpvQnekhmffEBYeokTf4lvVSIBfQ+t6GcHT583CMZ0ecfmEJhgei8H9ON85OFtl/59YCUO+Ew6R1T8hrDG3R5P/vP0OuVfNna1WRJZ1ighvoqpghZu7kXgRQ=
//        .           32768   CLASS4096   OPT  ; payload 4096, xrcode 0, version 0, flags 32768
//
//        ;; Message size: 859 bytes
        //this a faked response: the original query/response was for b.d.nsec3.ingotronic.ch. and is now changed to a.d.nsec3.ingotronic.ch.
        add("a.d.nsec3.ingotronic.ch./A",

//                                         ^^

        // a.d.nsec3.ingotronic.ch./A exists, but the response is faked from *.d.nsec3.ingotronic.ch. which must be detected by the NSEC proof
        Message response = resolver.send(createMessage("a.d.nsec3.ingotronic.ch./A"));
        assertFalse(response.getHeader().getFlag(Flags.AD));
        assertEquals(Rcode.SERVFAIL, response.getHeader().getRcode());
    }
}
