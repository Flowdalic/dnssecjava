#
# dnssecjava - a DNSSEC validating stub resolver for Java
# Copyright (C) 2013 Ingo Bauersachs. All rights reserved.
#
# This file is part of dnssecjava.
#
# Dnssecjava is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Dnssecjava is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with dnssecjava.  If not, see <http://www.gnu.org/licenses/>.
#

failed.authority.nodata=NODATA response has failed AUTHORITY rrset: {0}
failed.answer.cname_nodata=CNAME_NODATA response has failed ANSWER rrset: {0}
failed.nodata=NODATA response failed to prove NODATA status with NSEC/NSEC3
failed.synthesize.multiple=Synthesized CNAME RRset has multiple records - that doesn't make sense.
failed.synthesize.nomatch=Synthesized CNAME target ({0}) included in answer doesn't match DNAME synthesis rules (expected {1}).
failed.synthesize.toolong=Synthesized name would be too long, thus bogus.
failed.answer.positive=Positive response has failed ANSWER rrset: {0}
failed.authority.positive=Positive response has failed AUTHORITY rrset: {0}
failed.positive.wildcardgeneration=Could not generate NSEC wildcard, resulting name would be too long.
failed.positive.wildcard_too_broad=Positive response was wildcard expansion and did not prove original data did not exist or wasn't generated by the correct wildcard.
failed.nxdomain.cname_nxdomain=CNAME_NAMEERROR response has failed ANSWER rrset: {0}
failed.nxdomain.authority=NameError response has failed AUTHORITY rrset: {0}
failed.nxdomain.nsec3_ignored=All NSEC3s were validated but ignored due to unknown algorithms or invalid iteration counts.
failed.nxdomain.nsec3_bogus=NSEC3 failed to proof the name error.
failed.nxdomain.nsec3_insecure=NSEC3 proofed that the target domain is under opt-out, response is insecure.
failed.nxdomain.exists=NameError response has failed to prove that {0} does not exist.
failed.nxdomain.haswildcard=NameError response has failed to prove that the covering wildcard does not exist.
dnskey.no_rrset=Missing DNSKEY RRset in response to DNSKEY query for {0}.
dnskey.no_ds_match=Did not match a DS to a DNSKEY.
dnskey.anchor_verify_failed=The DNSKEY trust anchor for {0} did not verify the DNSKEY RRset for {0}.
failed.ds=DS rrset in DS response did not verify.
failed.ds.cname=CNAME in DS response was not secure.
ds.secure=CNAME validated, proof that DS does not exist.
failed.ds.cname.nocname=Validator classified CNAME but no CNAME of {0} for DS.
failed.ds.nsec=NSEC RRset for the referral did not verify.
failed.ds.nsec.hasdata=NSEC RRset for the referral did not prove no DS.
failed.ds.nonsec=No signed NSEC/NSEC3 records for query to {0}/DS.
failed.ds.nodelegation=NSEC RRset for the referral proved not a delegation point
insecure.ds.nsec=NSEC RRset for the referral proved no DS.
failed.ds.nowildcardproof=NSEC for wildcard does not prove absence of DS.
failed.ds.nsec.ent=NSEC for empty non-terminal did not verify.
insecure.ds.nsec.ent=NSEC for empty non-terminal proved no DS.
failed.ds.nonconclusive=NSEC proof did not conclusively point to DS or no DS.
failed.ds.nsec3=NSEC3s proved bogus.
insecure.ds.nsec3=NSEC3s proved no DS.
failed.ds.unknown=Ran out of validation options, thus bogus.
failed.ds.notype=Encountered an unhandled type ({0}) of DS response, thus bogus.
validate.insecure_unsigned=Unsigned response was proved to be validly INSECURE
validate.bogus=Could not establish validation of INSECURE status of unsigned response. Reason: {0}
validate.bogus.badkey=Could not establish a chain of trust to keys for {0}. Reason: {1}
validate.bogus.missingsig=Could not validate RRset due to missing signature.
validate.insecure=Verified that response is INSECURE
validate.response.unknown=Response subtype is {0} and thus cannot be validated.
insecure.ds.noalgorithms=No supported algorithms in DS RRset for {0}, treating as insecure.
